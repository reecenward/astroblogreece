---

import MarkdownContent from "../components/content";
import Layout from "../layouts/Layout.astro";

export async function getStaticPaths() {
  const response = await fetch(
    `https://strapi-production-71a1.up.railway.app/api/reecenwards`
  );
  const posts = await response.json();
  const paths = posts.data.map(
    (post: { id: number; attributes: { Title: string } }) => {
      return { params: { title: post.attributes.Title } };
    }
  );
  return paths;
}

const { title } = Astro.params;
const response = await fetch(
  `https://strapi-production-71a1.up.railway.app/api/reecenwards?filters[Title][$eq]=${title}&populate=Thumbnail`
);
const postData = await response.json();
const post = postData.data[0];

const formatDate = (dateString: string) => {
  const options: Intl.DateTimeFormatOptions = {
    year: "numeric",
    month: "long",
    day: "numeric",
    timeZone: "UTC",
  };
  const date = new Date(dateString);
  return date.toLocaleDateString("en-US", options);
};


---

<Layout

title={post.attributes.Title}
	description={post.attributes.Description}
	ogTitle={post.attributes.Title}
    ogDescription={post.attributes.Description}
	ogType="article"
	ogUrl=`https://reecenward.com/${post.attributes.Title}`
	ogImage={post.attributes.Thumbnail.data.attributes.url}
>
  <div class="main">
    <a href="/home" class="back-button">
        <img  src="/arrow-left.svg" alt="Back"  width="2" height="2"/>
      </a>
    <div class="blog-list-wrapper">
      <div class="blog-wrapper">
        <img class="banner"
          style={{ width: "250px" }}
          src={post.attributes.Thumbnail.data.attributes.url}
          alt={post.attributes.Thumbnail.data.attributes.alternativeText}
        />
        <h1 class="blog-title" >{post.attributes.Title}</h1>
        <p class="bio-p">{post.attributes.Description}</p>
        <hr>
        <div class="blog-title-wrapper">
          <p class="blog-date">
            <time>Posted on {formatDate(post.attributes.publishedAt)}</time>
          </p>
          <p class="blog-date">
            Updated on <time>{formatDate(post.attributes.updatedAt)}</time>
          </p>
        </div>
        <br>
        
        {post.attributes.Link && post.attributes.Link.trim() !== "" && ( // Check if Link attribute is not an empty string
          <a class="link" href={post.attributes.Link} target="_blank">{post.attributes.Linkname}</a>
      )}
    
        <br>
     
        <article class="article">
          <MarkdownContent content={post.attributes.Content} />
    
        </article>
      </div>
    </div>
  </div>

  <style>

:root {
  --background: #FFFBEF;
  --text: #2a333e; 

}

    body {
      background-color: var(--background);
      color: var(--text);
      font-family: "Inter", sans-serif;
      padding: 10px;
    }

    .main {
      height: auto;
      max-width: 100vw;
      display: flex;
     
      justify-content: center;
    }
    .flex {
      display: flex;
      align-items: center;
    }
    .blog-list-wrapper {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      max-width: 600px;
    }
    .blog-wrapper {
      text-decoration: none;
      color: var(--text);
      margin: 20px;
      width: 100%;
    }
    .bio-p {
	margin: 0;
  color: var(--text);
	line-height: 1.7em;
  }
    .banner {
      width: 100% !important;
      height: 250px !important;
      object-fit: cover;
      border-radius: 5px;
    }
    .blog-title-wrapper {
      display: flex;
      align-items: center;
      justify-content: space-between;
    }
    .blog-date {
      font-size: 15px;
      font-weight: 100;
      margin: 0;
    }
    .divider {
      margin: 0;
      padding: 5px;
    }

    .blog-title {
      font-size: 20px;
      font-weight: 500;
   
    }


    .back-button {
      position: sticky; /* Make it sticky */
      top: 20px; /* Adjust the top position */
      left: 20px; /* Position it to the left */
      color: var(--text);
      text-decoration: none;
      font-size: 16px;
      background-color: var(--background); /* Button background color */
      height: 50px;
      width: 50px;
      border-radius: 5px;
      border: #eae4d1 solid 1px;
      margin-right: 10px;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    .back-button:hover{
      background-color: #eae4d1;
      color:#2a333e;
    }
 
    .back-button img {
  width: 20px;
  height:20px;
}
 @media (max-width: 768px) {
      /* Apply styles only on screens smaller than 768px (typically mobile screens) */
      .back-button {
       position: fixed;
       color: var(--text);
       border-radius: 5px;
      text-decoration: none;
      border: #eae4d1 solid 1px;
      font-size: 16px;
      background-color: var(--background);
      }
    }
   
    .back-button:hover{
      background-color: #eae4d1;
      color:#2a333e;
    }
    .article{
      color: var(--text);
    }
  
    .link{
      width: 100%;
      background-color: var(--background);
      border: #eae4d1 solid 1px;
      display: flex;
      align-items: center;
      justify-content: center;
      height: 40px;
      border-radius: 10px;
      color: var(--text);
      text-decoration: none;
      font-weight: 500;
    }
    .link:hover{
      background-color: #eae4d1;
      color:#2a333e;
    }
   
  </style>
</Layout>
  